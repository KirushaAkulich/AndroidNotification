# Android

# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
    sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8Ozt5Ih9u2HQipwTQLM8kSyP9Cc/HQI7b1c0bfYmeDWmc6SrQJv9q6TVOYRiVnxsTNPgpf4A4WSugbKsvIEthTO5BRarBKy3VNTaU5pTcvejsV/z9D5+8DXS7Ln6aqzfZFDWor2pk9BfBe7jEd/aVdTQqQq0HV/+RmE1evxT5O/Jh33srNyaWu4IVlgxNvodaYIH+V7oFzXHd3j2waaRbSE2JzNabWknOEvD4iSdAnzBmiOmAQq9lYTBUL76+ExhBufyWxt5oBNKT3p6jgy9cv3IpNNWy2ODl1bvsT2sjVD2TGZJljunP+ehIBnfYwA/XUpXL9IHSZOGJSqydKGeSf5Sk7/WoLYDXcRy8O/qQWppROiKha9JGyglvvObWKnXuPfIoVhosKpru+vQiQeGVtJ0vHlKtHMg7kHWbV4nk/JaDsSYzp4UM8I4fbYzx9QLDwbRIg8uFOozKWMQDTp97nRQmRMhSe0sFCkiADRQnMjNCYe/j2yrJn2ybh/IqNc8= kiryl@kiryl-Lenovo-ideapad-Y700-15ISK'
    sshKeySecureFile: 'id_rsa'

- task: CmdLine@2
  inputs:
    script: |

      MANIFEST="$(Build.SourcesDirectory)/app/src/main/AndroidManifest.xml"
      VERSIONNAME=`grep versionName ${MANIFEST} | sed 's/.*versionName\s*=\s*\"\([^\"]*\)\".*/\1/g'`
      VERSIONCODE=`grep versionCode ${MANIFEST} | sed 's/.*versionCode\s*=\s*\"\([^\"]*\)\".*/\1/g'`

      echo $VERSIONAME
      echo $VERSIONCODE
      
      echo `git rev-parse HEAD`
      echo $(Build.SourceBranchName) 
      echo $(Build.SourceVersion)
      echo $CURRENT_BRUNCH
      if [[ $a == main* ]];
      then
      echo MAIN BRANCH
      fi
      
      git checkout $(Build.SourceBranchName) 
      git remote set-url origin git@github.com:KirushaAkulich/AndroidNotification.git

      git tag Android-v1.$VESIONNAME.$VERSIONCODE-Prod
      git push $(SYSTEM.DEFAULTWORKINGDIRECTORY) Android-v1.$VESIONNAME.$VERSIONCODE-Prod

      echo "##vso[task.setvariable variable=some_string] New android stage build version $VERSIONNAME.$VERSIONCODE "

- task: CmdLine@2
  inputs:
    script: |
      git config --global user.email "you@example.com"
      git config --global user.name "Your Name"
      git tag v1.4
      touch some_file.txt
      #echo 'some_text' > some_file.txt
      #git remote set-url origin git@github.com:KirushaAkulich/AndroidNotification.git
      #git checkout master
      #git add .
      #git status
      #git commit -m 'testing'
      #echo current branch
      #git branch
      #git branch -r
      #git push  origin $(Build.SourceBranchName)  
   


- task: SlackNotification@6
  inputs:
    SlackApiToken: '$(Slack.ApiKey)'
    MessageAuthor: 'Azure DevOps'
    Channel: '#private-test'
    NotificationType: 'ChatMessage'
    Message: 'Slack <@U01S168AE2H> :angel::skin-tone-2:  $(some_string)'


- task: CmdLine@2
  inputs:
    script: |
      MANIFEST="$(Build.SourcesDirectory)/app/src/main/AndroidManifest.xml"
      VERSIONCODE=`grep versionCode ${MANIFEST} | sed 's/.*versionCode\s*=\s*\"\([^\"]*\)\".*/\1/g'`
      sed -i.bak "s/android:versionCode="\"${VERSIONCODE}\""/android:versionCode="\"$(($VERSIONCODE + 1))\""/" ${MANIFEST}
      
      rm -f ${MANIFEST}.bak
      
      # Print out file for reference
      cat $MANIFEST

      git add $MANIFEST
      git status
      git commit -m 'Build version Updated'
      echo current branch
      git branch
      git branch -r
      git push  origin $(Build.SourceBranchName)  